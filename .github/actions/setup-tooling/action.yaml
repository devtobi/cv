name: "Setup tooling"
description: "This action manages installation of all required tooling and bun dependencies, it supports caching"
inputs:
  node-version:
    description: "NodeJS version to use"
    required: true
    default: "lts/*"
  bun-version:
    description: "Bun version to use"
    required: true
    default: "latest"
  use-chrome:
    description: "Whether to install Chrome (for PDF generation) or not"
    required: true
    default: "false"
  chrome-version:
    description: "Chrome version to use (only when use-chrome is true)"
    required: true
    default: "stable"
outputs:
  chrome-version:
    description: "Chrome version installed"
    value: ${{ steps.setup-chrome.outputs.chrome-version }}
  chrome-path:
    description: "Path to chrome binary"
    value: ${{ steps.setup-chrome.outputs.chrome-path }}
runs:
  using: composite
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
      with:
        node-version: ${{ inputs.node-version }}
    - name: Setup bun
      uses: oven-sh/setup-bun@f4d14e03ff726c06358e5557344e1da148b56cf7 # v1
      with:
        bun-version: ${{ inputs.bun-version }}
    - name: Set bun cache directory
      shell: bash
      run: echo "STORE_PATH=~/.bun/install/cache" >> $GITHUB_ENV
    - name: Setup bun cache
      uses: "actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9" # v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-bun-store-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-store-
    - name: Install bun dependencies
      shell: bash
      run: bun install
    - name: Setup chrome
      id: setup-chrome
      if: ${{ inputs.use-chrome == 'true' }}
      uses: browser-actions/setup-chrome@db1b524c26f20a8d1a10f7fc385c92387e2d0477 # v1
      with:
        chrome-version: ${{ inputs.chrome-version }}
